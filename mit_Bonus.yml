---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     ansible_python_interpreter: /usr/bin/python3
     tn_name: 'Ameen_Mit_Bonus_Tenant'
     
     bd_1: 'Web_server'
     bd_2: 'App_server'
     bd_3: 'Data_Base'
   
     sub_1: 'Web_server_sub'
     sub_2: 'App_server_sub'
     sub_3: 'Data_Base_sub'
     
     vrf_name: 'am_vrf'
     ap_name: 'am_ap'
     l3out_name: 'L3_Out_Device'

     epg_1: 'Web_Server'
     epg_2: 'App_Server'
     epg_3: 'Data_Base'
     epg_4: 'External_EPG'

     cont_1: 'C_App_Web'
     cont_2: 'C_DB_App'
     cont_3: 'C_Web_L3'
     L3_domain: 'ISR3945'

   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: '10.10.20.14'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: 'C1sco12345'
       private: yes
       unsafe: yes

   tasks:

   - name: Create a tenant
     tags: always
     aci_tenant: 
       tenant: "{{ tn_name }}"
       description: "Second Tenant_Code_Challenge"
       validate_certs: false
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       state: present
   
   - name: create Application Profile
     tags: ap
     aci_ap:
       ap: "{{ ap_name }}"
       tenant: "{{ tn_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
  

   - name: create VRF
     tags: vrf
     aci_vrf:
       vrf: "{{ vrf_name }}"
       tenant: "{{ tn_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false

   - name: create a Bridge-Domain_webserver
     tags: bd
     aci_bd:
       tenant: "{{ tn_name }}"
       bd: "{{ bd_1 }}"
       vrf: "{{ vrf_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
       scope: public

   - name: Create a Bridge-Domain_appserver
     tags: bd
     aci_bd:
       tenant: "{{ tn_name }}"
       bd: "{{ bd_2 }}"
       vrf: "{{ vrf_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
       scope: private


   - name: create a Bridge-Domain_Data_Base
     tags: bd
     aci_bd:
       tenant: "{{ tn_name }}"
       bd: "{{ bd_3 }}"
       vrf: "{{ vrf_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
       scope: private



   - name: create a subnet for Bridge-Domain_webserver
     tags: bd,sub
     aci_bd_subnet:
       name: "{{ sub_1 }}"
       tenant: "{{ tn_name }}"
       bd: "{{ bd_1 }}"
       gateway_ip: 20.0.1.1
       subnet_mask: 24
       scope: public    # so that it can be advertised externally through L3-out
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
       
   - name: create a subnet for Bridge-Domain_App-server
     tags: bd,sub
     aci_bd_subnet:
       name: "{{ sub_2 }}"
       tenant: "{{ tn_name }}"
       bd: "{{ bd_2 }}"
       gateway_ip: 10.0.1.1
       subnet_mask: 24
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: create a subnet for Bridge-Domain_Data-Base
     tags: bd,sub
     aci_bd_subnet:
       name: "{{ sub_3 }}"
       tenant: "{{ tn_name }}"
       bd: "{{ bd_3 }}"
       gateway_ip: 10.0.2.1
       subnet_mask: 24
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false



   - name: Create EPG_Web_Server
     tags: epg
     aci_epg:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_1 }}"
       description: "Description of EPG_Web"
       bd: "{{ bd_1 }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
       

   - name: Create EPG_App_Server
     tags: epg
     aci_epg:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_2 }}"
       description: "Description of EPG_App"
       bd: "{{ bd_2 }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
 

   - name: Create EPG_Data_Base
     tags: epg
     aci_epg:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_3 }}"
       description: "Description of EPG_Data_Base"
       bd: "{{ bd_3 }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false




   - name: Contract between (App_Server & Web_Server)
     tags: cont
     aci_contract:
       contract: "{{ cont_1 }}"
       tenant: "{{ tn_name }}"
       description: Communication between App_Server & Web-servers
       scope: tenant
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false



   - name: Contract between (Data_Base & App_server)
     tags: cont
     aci_contract:
       contract: "{{ cont_2 }}"
       tenant: "{{ tn_name }}"
       description: Communication between Data_Base & App)
       scope: tenant
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false



   - name: Configure Contract_1 EPG Provider
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_2 }}"
       contract:  "{{ cont_1 }}"
       contract_type: provider
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Configure Contract_1 EPG consumer
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_1 }}"
       contract:  "{{ cont_1 }}"
       contract_type: consumer
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Configure Contract_2 EPG Provider
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_3 }}"
       contract:  "{{ cont_2 }}"
       contract_type: provider
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Configure Contract_2 EPG Consumer
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_2 }}"
       contract:  "{{ cont_2 }}"
       contract_type: consumer
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Create L3-Out
     tags: L3
     aci_l3out:
       tenant: "{{ tn_name }}"
       l3out: "{{ l3out_name }}" 
       description: L3_Out for Production tenant
       domain: "{{ L3_domain }}"
       vrf: "{{ vrf_name }}"
       l3protocol: ospf
       route_control: export
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Create External_EPG
     tags: L3,extepg
     aci_l3out_extepg:
       extepg: "{{ epg_4 }}"
       tenant: "{{ tn_name }}"
       l3out: "{{ l3out_name }}" 
       description: External EPG which to be associated with the L3-out
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


# In order to advertise web-server bridge-domain to the outside world
   - name: Contract between (Web_Server & L3-out)
     tags: cont, L3
     aci_contract:
       contract: "{{ cont_3 }}"
       tenant: "{{ tn_name }}"
       description: Communication between Web_Server & L3_Out)
       scope: tenant
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Bind Contract_3 to EPG_1 Provider
     tags: cont, L3
     aci_epg_to_contract:
       tenant: "{{ tn_name }}"
       ap: "{{ ap_name }}"
       epg: "{{ epg_1 }}"
       contract:  "{{ cont_3 }}"
       contract_type: provider
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false



   - name: Bind Contract_3 to an External EPG_4 Consumer
     tags: cont,L3,extepg
     cisco.aci.aci_l3out_extepg_to_contract:
       tenant: "{{ tn_name }}"
       extepg: "{{ epg_4 }}"
       l3out: "{{ l3out_name }}" 
       contract:  "{{ cont_3 }}"
       contract_type: consumer
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false


   - name: Create a VPC member
     tags: vpc
     aci_vpc_member:
       tenant: "{{ tn_name }}"
       l3out: "{{ l3out_name }}"
       logical_node: nodeName
       logical_interface: eth1/15
       path_dn: topology/pod-1/protpaths-101-102/pathep-[policy_group_name]
       side: A
       state: present
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"


